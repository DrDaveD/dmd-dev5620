.\" 
.\"									
.\"	Copyright (c) 1987,1988,1989,1990,1991,1992   AT&T		
.\"			All Rights Reserved				
.\"									
.\"	  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T.		
.\"	    The copyright notice above does not evidence any		
.\"	   actual or intended publication of such source code.		
.\"									
.\" 
.ds ZZ APPLICATION DEVELOPMENT PACKAGE
.TH CIRCLE 3L
.XE "circle()"
.XE "disc()"
.XE "discture()"
.XE "arc()"
.SH NAME
circle, disc, discture, arc \- circle routines
.SH SYNOPSIS
.ft B
void circle(b, p, r, f)
.sp 1.5
void disc(b, p, r, f)
.sp 1.5
void discture(b, p, r, t, f)
.sp 1.5
void arc(b, p, p1, p2, f)
.sp 1.5
Bitmap *b;
.br
Point p, p1, p2;
.br
int r;
.br
Texture *t;
.br
Code f;\fR
.sp .5
.SH DESCRIPTION
The
.I circle
function
draws the best approximate circle of radius
.I r
centered at Point
.I p
in the Bitmap
.I b
with Code
.IR f .
The circle is guaranteed to be symmetrical about the horizontal,
vertical, and diagonal axes.
.sp .5
.PP
The
.I disc
function
draws a disc of radius
.I r
centered at Point
.I p
in the Bitmap
.I b
with Code
.IR f .
A disc is a circle which has been completely filled.
.sp .5
.PP
The
.I discture
function
draws a disc of radius
.I r
centered at Point
.I p
in the Bitmap
.I b
using the Texture
.I t
with Code
.IR f .
The
.I discture
function
is similar to
the
.I disc
function
except it allows one to specify a pattern to fill the disc.
.sp .5
.PP
The
.I arc
function
draws a circular arc centered on
.IR p ,
traveling counter-clockwise from
.I p1
to the point on the circle closest to
.IR p2 .
.sp .5
.SH EXAMPLE
The following routine draws a ``smiley face'' in a Bitmap
.I b
with center
.I c
and radius
.I r
with nose Texture
.I t
using Code
.IR f .
.bp
.PP
.RS 3
.ft CM
.nf
#include <dmd.h>

smiley(b, c, rad, t, f)
Bitmap  *b;
Point    c;
int      rad;
Texture *t;
Code     f;
.fi
.ft CM
.nf
{
    int mino, e; /* offsets for placing */
               /* eyes, nose and mouth */
    int enrad; /* radius of eyes and nose */

    mino = rad/2;
    e = rad/3;
    enrad = e/3;
    circle (b, c, rad, f); /* face outline */
    disc (b, Pt(c.x-e, c.y-mino),
         enrad, f);        /* left eye */
    disc (b, Pt(c.x+e, c.y-mino),
         enrad, f);        /* right eye */
    discture (b, c, enrad, t, f); /* nose */
    arc (b, c, Pt(c.x-mino,
         c.y+mino), Pt(c.x+mino,
         c.y+mino),f);     /* mouth */
}
.fi
.ft R
.RE
.SH SEE ALSO
ellipse(3L), jcircle(3R), jellipse(3L), texture(3R).
