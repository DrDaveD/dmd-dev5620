.\" 
.\"									
.\"	Copyright (c) 1987,1988,1989,1990,1991,1992   AT&T		
.\"			All Rights Reserved				
.\"									
.\"	  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T.		
.\"	    The copyright notice above does not evidence any		
.\"	   actual or intended publication of such source code.		
.\"									
.\" 
.ds ZZ APPLICATION DEVELOPMENT PACKAGE
.TH PTARITH 3R
.XE "add()"
.XE "sub()"
.XE "mul()"
.XE "div()"
.SH NAME
add, sub, mul, div \- arithmetic on Points
.SH SYNOPSIS
.ft B
Point add(p, q)
.sp
Point sub(p, q) 
.sp
Point mul(p, a)
.sp
Point div(p, a)
.sp
Point p, q;
.br
int a;
.SH DESCRIPTION
The
.I add
function
returns the Point sum of its arguments:
.sp .5
.ce
.ft CM
{ p.x+q.x, p.y+q.y }
.sp .5
.ft R
The
.I sub
function
returns the Point difference of its arguments:
.sp .5
.ce
.ft CM
{ p.x-q.x, p.y-q.y }
.sp .5
.ft R
The
.I mul
function
returns the Point:
.sp .5
.ce
.ft CM
{ p.x*a, p.y*a }
.sp .5
.ft R
The
.I div
function
returns the Point:
.sp .5
.ce
.ft CM
{ p.x/a, p.y/a }.
.sp .5
.ft R
.SH EXAMPLE
The following routine returns the center Point of a \f2layer\f1.
.PP
.RS 3
.nf
.ft CM
#include <dmd.h>
Point
getcenter()
{
    Point offset;
    offset = div (sub
        (Drect.corner,Drect.origin), 2);
    return add (Drect.origin, offset);
}
\fR
.fi
.RE
.SH SEE ALSO
layer(1).
