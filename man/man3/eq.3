.\" 
.\"									
.\"	Copyright (c) 1987,1988,1989,1990,1991,1992   AT&T		
.\"			All Rights Reserved				
.\"									
.\"	  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T.		
.\"	    The copyright notice above does not evidence any		
.\"	   actual or intended publication of such source code.		
.\"									
.\" 
.ds ZZ APPLICATION DEVELOPMENT PACKAGE
.TH EQ 3R
.XE "eqpt()"
.XE "eqrect()"
.SH NAME
eqpt, eqrect \- compare for equality
.SH SYNOPSIS
.B int eqpt (p, q)
.br
.B Point p, q;
.PP
.B int eqrect (r, s)
.br
.B Rectangle r, s;
.SH DESCRIPTION
The
.I eqpt
function
compares two Points
and returns
a 1 if the Points are equal or a 0 if they are unequal.
Two Points
are equal if the corresponding coordinates
.I x
and
.I y
are equal.
.PP
The
.I eqrect
function
compares two Rectangles
and returns
a 1 if the Points are equal or a 0 if they are unequal.
Two Rectangles
are equal if all four corresponding coordinates are equal.
.SH EXAMPLE
The
.I eqmouse
function
determines if the current mouse coordinate equals \fIp\fR.
The
.I eqDrect
function
determines if the Rectangle passed equals \fIDrect\fR.
.PP
.RS 3
.ft CM
.nf
#include <dmd.h>

eqmouse(p)
Point p;
{
        return eqpt (mouse.xy, p);
}

eqDrect(r)
Rectangle r;
{
        return eqrect (Drect, r);
}
.fi
.ft R
.RE
.SH SEE ALSO
structures(3R).
