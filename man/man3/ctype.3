.\" 
.\"									
.\"	Copyright (c) 1987,1988,1989,1990,1991,1992   AT&T		
.\"			All Rights Reserved				
.\"									
.\"	  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T.		
.\"	    The copyright notice above does not evidence any		
.\"	   actual or intended publication of such source code.		
.\"									
.\" 
.ds ZZ APPLICATION DEVELOPMENT PACKAGE
.TH CTYPE 3L
.XE "isalpha()"
.XE "isupper()"
.XE "islower()"
.XE "isdigit()"
.XE "isxdigit()"
.XE "isalnum()"
.XE "isspace()"
.XE "ispunct()"
.XE "isprint()"
.XE "isgraph()"
.XE "iscntrl()"
.XE "isascii()"
.SH NAME
isalpha, isupper, islower, isdigit, isxdigit, isalnum, isspace, ispunct, isprint, isgraph, iscntrl, isascii \- classify characters
.SH SYNOPSIS
.B #include <ctype.h>
.PP
.B int isalpha (c)
.br
.B int c;
.SH DESCRIPTION
These macros classify character-coded integer values by table lookup.
Each is a predicate returning nonzero for true,
zero for false.
The macro
.I isascii
is defined on all integer values; the rest
are defined only where 
.I isascii
is true and on the single non-\s-1ASCII\s+1 value \-1.
.TP 15n
.I isalpha
.I c
is a letter.
.TP
.I isupper
.I c
is an upper-case letter.
.TP
.I islower
.I c
is a lower-case letter.
.TP
.I isdigit
.I c
is a digit [0-9].
.TP
.I isxdigit
.I c
is a hexadecimal digit [0-9], [A-F] or [a-f].
.TP
.I isalnum
.I c
is an alphanumeric (letter or digit).
.TP
.I isspace
.I c
is a space, tab, carriage return, new-line, vertical tab, or form-feed.
.TP
.I ispunct
.I c
is a punctuation character (neither control nor alphanumeric).
.TP
.I isprint
.I c
is a printing character, code 040 (space) through 0176 (tilde).
.TP
.I isgraph
.I c
is a printing character, like
.I isprint
except false for space.
.TP
.I iscntrl
.I c
is a delete character (0177) or an ordinary control character
(less than 040).
.TP
.I isascii
.I c
is an \s-1ASCII\s+1 character, code less than 0200.
.PP
If the argument to any of these macros is not in the
domain of the function,
the result is undefined.
.PP
These are identical to the \s-1UNIX\s+1 system ``libc'' functions.
